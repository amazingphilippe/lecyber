{"version":3,"file":"index.mjs","sources":["../node_modules/unist-util-is/convert.js","../node_modules/unist-util-visit-parents/color.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../src/index.js"],"sourcesContent":["'use strict'\n\nmodule.exports = convert\n\nfunction convert(test) {\n  if (test == null) {\n    return ok\n  }\n\n  if (typeof test === 'string') {\n    return typeFactory(test)\n  }\n\n  if (typeof test === 'object') {\n    return 'length' in test ? anyFactory(test) : allFactory(test)\n  }\n\n  if (typeof test === 'function') {\n    return test\n  }\n\n  throw new Error('Expected function, string, or object as test')\n}\n\n// Utility assert each property in `test` is represented in `node`, and each\n// values are strictly equal.\nfunction allFactory(test) {\n  return all\n\n  function all(node) {\n    var key\n\n    for (key in test) {\n      if (node[key] !== test[key]) return false\n    }\n\n    return true\n  }\n}\n\nfunction anyFactory(tests) {\n  var checks = []\n  var index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return any\n\n  function any() {\n    var index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, arguments)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n// Utility to convert a string into a function which checks a given nodeâ€™s type\n// for said string.\nfunction typeFactory(test) {\n  return type\n\n  function type(node) {\n    return Boolean(node && node.type === test)\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","module.exports = color\nfunction color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n","'use strict'\n\nmodule.exports = visitParents\n\nvar convert = require('unist-util-is/convert')\nvar color = require('./color')\n\nvar CONTINUE = true\nvar SKIP = 'skip'\nvar EXIT = false\n\nvisitParents.CONTINUE = CONTINUE\nvisitParents.SKIP = SKIP\nvisitParents.EXIT = EXIT\n\nfunction visitParents(tree, test, visitor, reverse) {\n  var step\n  var is\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  is = convert(test)\n  step = reverse ? -1 : 1\n\n  factory(tree, null, [])()\n\n  function factory(node, index, parents) {\n    var value = typeof node === 'object' && node !== null ? node : {}\n    var name\n\n    if (typeof value.type === 'string') {\n      name =\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      visit.displayName =\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\n    }\n\n    return visit\n\n    function visit() {\n      var grandparents = parents.concat(node)\n      var result = []\n      var subresult\n      var offset\n\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if (node.children && result[0] !== SKIP) {\n        offset = (reverse ? node.children.length : -1) + step\n\n        while (offset > -1 && offset < node.children.length) {\n          subresult = factory(node.children[offset], offset, grandparents)()\n\n          if (subresult[0] === EXIT) {\n            return subresult\n          }\n\n          offset =\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\n        }\n      }\n\n      return result\n    }\n  }\n}\n\nfunction toResult(value) {\n  if (value !== null && typeof value === 'object' && 'length' in value) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","'use strict'\n\nmodule.exports = visit\n\nvar visitParents = require('unist-util-visit-parents')\n\nvar CONTINUE = visitParents.CONTINUE\nvar SKIP = visitParents.SKIP\nvar EXIT = visitParents.EXIT\n\nvisit.CONTINUE = CONTINUE\nvisit.SKIP = SKIP\nvisit.EXIT = EXIT\n\nfunction visit(tree, test, visitor, reverse) {\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    visitor = test\n    test = null\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  function overload(node, parents) {\n    var parent = parents[parents.length - 1]\n    var index = parent ? parent.children.indexOf(node) : null\n    return visitor(node, index, parent)\n  }\n}\n","import visit from 'unist-util-visit'\n\nexport default options => {\n  if (!options || !options.jargon) {\n    throw Error('Required \"jargon\" option is missing in remark-jargon configuration')\n  }\n\n  const isJargon = node => {\n    if (\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      Object.keys(options.jargon).indexOf(node.children[0].value.toLowerCase()) !== -1\n    )\n      return true\n\n    return false\n  }\n\n  const visitor = node => {\n    if (isJargon(node)) {\n      let id = node.position.start.offset\n      let term = node.children[0].value\n      let html = options.jargon[term.toLowerCase()]\n      let value = `<span><input id=\"${id}\" type=\"checkbox\" class=\"jargon-toggler\"/><label for=\"${id}\" class=\"jargon-term\" data-term=\"${term}\">${term}</label><span class=\"jargon-info\">${html}</span></span>`\n      let position = node.children[0].position\n      position.end.column = position.end.column + value.length - term.length\n      position.end.offset = position.end.column - 1\n      node.children = [\n        {\n          type: 'html',\n          value,\n          position,\n          indent: node.children[0].indent\n        }\n      ]\n    }\n  }\n\n  const transform = tree => {\n    visit(tree, 'emphasis', visitor)\n  }\n\n  return transform\n}\n"],"names":["convert","test","ok","type","node","Boolean","typeFactory","tests","checks","index","length","any","apply","this","arguments","anyFactory","all","key","allFactory","Error","d","visitParents","tree","visitor","reverse","step","is","factory","parents","name","value","tagName","undefined","visit","displayName","color","subresult","offset","grandparents","concat","result","toResult","children","CONTINUE","SKIP","EXIT","parent","indexOf","options","jargon","Object","keys","toLowerCase","isJargon","id","position","start","term","html","end","column","indent"],"mappings":"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"}